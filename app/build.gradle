apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'jacoco'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.blank.chapter10"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation multidexDependencies.values()

    implementation kotlinDependencies.values()
    implementation appCompatDependencies.values()
    implementation uiDependencies.values()
    implementation jetpackDependencies.values()
//    implementation googleServiceDependencies.values()
    implementation legacySupportDependencies.values()
    implementation uiAndroidx.values()

    implementation retrofitDependencies.values()
    implementation rxJavaAndroidDependencies.values()
    implementation okHttpDependencies.values()
    implementation daggerHiltDependencies.values()
    kapt daggerHiltKaptDependencies.values()
    kapt roomKaptDependencies.values()

    implementation glideDependencies.values()
    annotationProcessor glideDependencies.values()
    implementation(mockitoDependencies.values()) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }
    testImplementation testDependencies.values()
    androidTestImplementation androidTestDependencies.values()
    testImplementation spekDependenciesTestImplementation.values()

    testRuntimeOnly testRuntimeDependencies.values()

    implementation dialogUIDependencies.values()
    implementation roomDependencies.values()
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/data/models/*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}