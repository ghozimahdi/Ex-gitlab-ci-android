// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlinVersion = "1.3.72"
    ext.hilt_version = "2.28-alpha"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    appCompatVersion = "1.1.0"
    ktxVersion = "1.2.0"
    materialVersion = "1.1.0"
    constraintVersion = "1.1.3"
    vectorDrawableVersion = "1.1.0"
    navigationFragment = "2.2.1"
    navigationUi = "2.2.1"
    lifecycleVersion = "2.2.0"
    googleServiceMap = "17.0.0"
    androidMapUtilVersion = "0.6.2"
    googlePlace = "2.2.0"
    googleServiceAuth = "17.0.0"
    carouselView = "0.1.5"
    legacySupport = "1.0.0"
    jUnitVersion = "4.12"
    extJUnitVersion = "1.1.1"
    expressoCoreVersion = "3.2.0"
    retrofitVersion = "2.6.0"
    adapterRxVersion = "2.5.0"
    gsonVersion = "2.6.0"
    rxjavaVersion = '2.2.7'
    rxAndroidVersion = '2.1.1'
    okhttp = "3.12.1"
    loggingInterceptor = "4.2.1"
    commonTextVersion = "1.4"
    slidingUpPanel = "3.4.0"
    daggerVersion = "2.24"
    daggerComplierVersion = "2.22"
    glideVersion = "4.11.0"
    jdAlexanderVersion = "1.1.0"
    awesomeValidationVersion = "4.2"
    junitVersion = '4.12'
    spekVersion = '2.0.10'
    jUnitPlatformRunnerVersion = '1.5.1'
    jUnitJupiterApiVersion = '5.5.0'
    pagingRuntime = '2.1.2'
    crashlyticsVersion = '17.0.0-beta04'
    mockitoVersion = "3.0.0"
    testingKtxVersion = "1.1.2"
    archCoreTestingVersion = "2.1.0"
    expressoCoreVersion = "3.2.0"
    testRunnerVersion = "1.2.0"
    testRulesVersion = "1.2.0"
    extJunitVersion = "1.1.1"
    mockitoTestingAndroidVersion = "2.9.0"
    mockitoKotlinVersion = "1.5.0"
    jupiterEngineVersion = "5.5.0"
    multiDexVersion = "1.0.3"
    androidxHilt_version = "1.0.0-alpha01"
    activityKtx = "1.1.0"
    fragmentKtx = "1.2.5"

    multidexDependencies = [
            multidex: "com.android.support:multidex:$multiDexVersion",
    ]

    kotlinDependencies = [
            kotlin          : "androidx.core:core-ktx:$ktxVersion",
            kotlinStdLibSdk7: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
    ]
    uiDependencies = [
            material        : "com.google.android.material:material:$materialVersion",
            constraintLayout: "androidx.constraintlayout:constraintlayout:$constraintVersion",
            vectorDrawable  : "androidx.vectordrawable:vectordrawable:$vectorDrawableVersion",
            slidingUpPanel  : "com.sothree.slidinguppanel:library:$slidingUpPanel",
            awesomValidation: "com.basgeekball:awesome-validation:$awesomeValidationVersion",
            alexander       : "com.github.jd-alexander:library:$jdAlexanderVersion",
            commonText      : "org.apache.commons:commons-text:$commonTextVersion"
    ]
    jetpackDependencies = [
            navigationFragment      : "androidx.navigation:navigation-fragment:$navigationFragment",
            navigationUI            : "androidx.navigation:navigation-ui:$navigationUi",
            lifecycleExtensions     : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
            lifecycleReactiveStreams: "androidx.lifecycle:lifecycle-reactivestreams:$lifecycleVersion",
    ]
    googleServiceDependencies = [
            goolgeServicesMaps: "com.google.android.gms:play-services-maps:$googleServiceMap",
            androidMapsUtil   : "com.google.maps.android:android-maps-utils:$androidMapUtilVersion",
            googlePlace       : "com.google.android.libraries.places:places:$googlePlace",
            googleServiceAuth : "com.google.android.gms:play-services-auth:$googleServiceAuth",
    ]
    appCompatDependencies = [
            kotlin: "androidx.appcompat:appcompat:$appCompatVersion",
    ]
    legacySupportDependencies = [
            legacySupport: "androidx.legacy:legacy-support-v4:$legacySupport",
    ]

    glideDependencies = [
            glide: "com.github.bumptech.glide:glide:$glideVersion",
    ]

    retrofitDependencies = [
            retrofit                : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitAdapter         : "com.squareup.retrofit2:adapter-rxjava2:$adapterRxVersion",
            retrofitConverterGson   : "com.squareup.retrofit2:converter-gson:$gsonVersion",
            retrofitConverterScalars: "com.squareup.retrofit2:converter-scalars:2.3.0"
    ]
    rxJavaAndroidDependencies = [
            rxJava   : "io.reactivex.rxjava2:rxjava:$rxjavaVersion",
            rxAndroid: "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    ]
    okHttpDependencies = [
            okhttp      : "com.squareup.okhttp3:okhttp:$okhttp",
            okhttpLoging: "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"
    ]
    daggerDependencies = [
            dagger              : "com.squareup.okhttp3:okhttp:$okhttp",
            daggerAndroid       : "com.google.dagger:dagger-android:$daggerVersion",
            daggerAndroidSupport: "com.google.dagger:dagger-android-support:$daggerVersion"
    ]
    daggerKaptDependencies = [
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion"
    ]
    mockitoDependencies = [
            mockito: "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion",
    ]
    testDependencies = [
            junit          : "junit:junit:${junitVersion}",
            mockito        : "org.mockito:mockito-core:$mockitoVersion",
            kotlinReflect  : "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
            testingKtx     : "com.jraska.livedata:testing-ktx:$testingKtxVersion",
            archCoreTesting: "androidx.arch.core:core-testing:$archCoreTestingVersion",

    ]
    androidTestDependencies = [
            expressoCore  : "androidx.test.espresso:espresso-core:$expressoCoreVersion",
            testRunner    : "androidx.test:runner:$testRunnerVersion",
            testRules     : "androidx.test:rules:$testRulesVersion",
            extJunit      : "androidx.test.ext:junit:$extJunitVersion",
            mockitoTesting: "org.mockito:mockito-android:$mockitoTestingAndroidVersion",
    ]
    spekDependenciesTestImplementation = [
            spek2Dsl           : "org.spekframework.spek2:spek-dsl-jvm:${spekVersion}",
            spekRunner         : "org.spekframework.spek2:spek-runner-junit5:${spekVersion}",
            junitPlatformRunner: "org.junit.platform:junit-platform-runner:${jUnitPlatformRunnerVersion}",
            jUnitJupiterApi    : "org.junit.jupiter:junit-jupiter-api:${jUnitJupiterApiVersion}"
    ]
    testRuntimeDependencies = [
            jupiteEngine: "org.junit.jupiter:junit-jupiter-engine:$jupiterEngineVersion",
    ]
    dialogUIDependencies = [
            "dialog": 'com.github.d-max:spots-dialog:1.1@aar'
    ]
    daggerHiltDependencies = [
            "hilt"        : "com.google.dagger:hilt-android:$hilt_version",
            "hiltAndroidx": "androidx.hilt:hilt-lifecycle-viewmodel:$androidxHilt_version"
    ]
    daggerHiltKaptDependencies = [
            "hiltCompiler"        : "com.google.dagger:hilt-android-compiler:$hilt_version",
            "hiltAndroidxCompiler": "androidx.hilt:hilt-compiler:$androidxHilt_version"
    ]

    uiAndroidx = [
            "fragmentKtx": "androidx.fragment:fragment-ktx:$fragmentKtx",
            "activityKtx": "androidx.activity:activity-ktx:$activityKtx"
    ]
}

task clean(type: Delete) {
    delete rootProject.buildDir
}